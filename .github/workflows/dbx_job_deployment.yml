name: CI/CD - Data Quality Deployment to Azure Databricks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  databricks-ci-cd:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: ✅ Run Pytest
      run: |
        pytest dqe_framework/tests/test_dummy.py --junitxml=report.xml

    - name: ⬆️ Upload Pytest Report
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: report.xml

    - name: 🧰 Install Databricks CLI
      run: pip install databricks-cli

    - name: 🔐 Configure Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        mkdir -p .databricks
        echo "[DEFAULT]" > .databricks/config
        echo "host = $DATABRICKS_HOST" >> .databricks/config
        echo "token = $DATABRICKS_TOKEN" >> .databricks/config

    - name: 🚀 Deploy `src/` to DBFS
      env:
        DATABRICKS_CONFIG_FILE: .databricks/config
      run: |
        databricks fs cp dqe_framework/ dbfs:/git_practise_apr_2025/ --recursive

    - name: 📌 Create Databricks Job
      env:
        DATABRICKS_CONFIG_FILE: .databricks/config
      run: |
        databricks jobs create --json-file job_config.json > job_output.json
        echo "✅ Job created"

    - name: 🚀 Run Databricks Job
      env:
        DATABRICKS_CONFIG_FILE: .databricks/config
      run: |
        JOB_ID=$(jq -r '.job_id' job_output.json)
        echo "Running Job ID: $JOB_ID"
        databricks jobs run-now --job-id $JOB_ID
